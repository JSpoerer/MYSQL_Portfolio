# User Defined Function - "TSPOTSearchCompiler
# I create formulas within Thoughtspot an AI-powered business intelligence platform for uses in reports.
# One of my key formulas is as follows, which searches the given customer name 'Tyco' against the field 'Sold to customer name (cust)' using different methods.
# ( Sold to customer name (cust) = 'Tyco ' ) or contains ( Sold to customer name (cust) , ' Tyco  ' ) or ( Left ( Sold to customer name (cust) , 6 ) = 'Tyco  ' ) or...
# This would be done multiple times for different customers and also against the field 'end cust. name'. I needed a formula that would allow me to do it quickly for a list of customer names.
# I'm currently using a defined function, this way i can more flexible with when i use it. I could save a template and then replace the text when needed, but i don't always need both 'Sold to...' and  'End Cust. name'.

# My defined functions includes two arguments, the first being the string to to be searched and the an argument to define the preferred results {1 : Sold to , 2: End Cus , 3:  Sold Cus & End Cust}

Stored = TSPOTSearchCompiler.Function.bas

Attribute VB_Name = "TSPOTSearchCompiler"
Function TSPOTsearch(searchstring As String, SorE As Integer, Multi As Integer) As String
    ' Declare variables
    Dim SorEText As String
    Dim ExactStep As String
    Dim ContainStep As String
    Dim LeftStep As String
    Dim stringlength As Integer
    Dim SoldResult As String
    Dim EndResult As String
    Dim TSPOTsearchResult As String
    
    ' Set SorEText based on SorE value
    If SorE = 1 Then
        SorEText = "Sold to customer name (cust)"
    ElseIf SorE = 2 Then
        SorEText = "End Cust. Name"
    ElseIf SorE = 3 Then
        SorEText = "Sold to customer name (cust)" ' We will add both conditions for SorE = 3
    Else
        SorEText = "invalid SorE input"
        TSPOTsearchResult = "invalid SorE input"
        TSPOTsearch = TSPOTsearchResult
        Exit Function
    End If

    ' Define the search steps after SorEText is set
    ExactStep = "( " & SorEText & " = '" & searchstring & "' )"
    ContainStep = " contains ( " & SorEText & " , ' " & searchstring & " ' )"
    stringlength = Len(searchstring) + 1
    LeftStep = " ( Left ( " & SorEText & " , " & stringlength & " ) = '" & searchstring & " ' )"
    
    ' Now set the results based on the SorE value
    If SorE = 1 Then
        SoldResult = ExactStep & " or " & ContainStep & " or " & LeftStep
        TSPOTsearchResult = SoldResult
    ElseIf SorE = 2 Then
        EndResult = ExactStep & " or " & ContainStep & " or " & LeftStep
        TSPOTsearchResult = EndResult
    ElseIf SorE = 3 Then
        ' For SorE = 3, combine both Sold and End Customer results
        SoldResult = ExactStep & " or " & ContainStep & " or " & LeftStep
        SorEText = "End Cust. Name" ' Now change SorEText for End Customer
        ExactStep = "( " & SorEText & " = '" & searchstring & "' )"
        ContainStep = " contains ( " & SorEText & " , ' " & searchstring & " ' )"
        LeftStep = " ( Left ( " & SorEText & " , " & stringlength & " ) = '" & searchstring & " ' )"
        EndResult = ExactStep & " or " & ContainStep & " or " & LeftStep
        TSPOTsearchResult = SoldResult & " or " & EndResult
    End If
    
    ' Return result adding a or if the formula is used for multiple search terms, as specified in multi argument
    If Multi = 0 Then
        TSPOTsearch = TSPOTsearchResult
    ElseIf Multi = 1 Then
        TSPOTsearch = TSPOTsearchResult & " or  "
    Else
        TSPOTsearchResult = "invalid multi input"
        TSPOTsearch = TSPOTsearchResult
        Exit Function
    End If
End Function
